{"version":3,"sources":["script.js"],"names":["AOS","init","delay","duration","easing","mirror","sections","document","querySelectorAll","navHighlighter","scrollY","window","pageYOffset","forEach","current","sectionHeight","offsetHeight","sectionTop","getBoundingClientRect","top","sectionId","getAttribute","querySelector","concat","classList","add","remove","addEventListener","menuIcon","cancelIcon","sidebarEl","sidebarLinks","sidebarLink"],"mappings":"AAAA,aACAA,IAAIC,KAAK,CAEPC,MAAO,IACPC,SAAU,KACVC,OAAQ,OACRC,QAAQ,IAKV,IAAMC,SAAWC,SAASC,iBAAiB,eAK3C,SAASC,iBAEP,IAAIC,EAAUC,OAAOC,YAGrBN,SAASO,SAAQ,SAACC,GAChB,IAAMC,EAAgBD,EAAQE,aAExBC,EACJH,EAAQI,wBAAwBC,IAAMR,OAAOC,YAAc,GAEvDQ,EAAYN,EAAQO,aAAa,MAOnCX,EAAUO,GAAcP,GAAWO,EAAaF,EAClDR,SACGe,cADH,oBAAAC,OACqCH,EADrC,OAEGI,UAAUC,IAAI,oBAEjBlB,SACGe,cADH,oBAAAC,OACqCH,EADrC,OAEGI,UAAUE,OAAO,uBA3B1Bf,OAAOgB,iBAAiB,SAAUlB,gBAiClC,IAAMmB,SAAWrB,SAASe,cAAc,cAClCO,WAAatB,SAASe,cAAc,gBACpCQ,UAAYvB,SAASe,cAAc,YACnCS,aAAexB,SAASC,iBAAiB,kBAE/CoB,SAASD,iBAAiB,SAAS,WACjCG,UAAUN,UAAUC,IAAI,sBAG1BI,WAAWF,iBAAiB,SAAS,WACnCG,UAAUN,UAAUE,OAAO,sBAG7BK,aAAalB,SAAQ,SAACmB,GACpBA,EAAYL,iBAAiB,SAAS,WACpCG,UAAUN,UAAUE,OAAO","file":"script.js","sourcesContent":["//main.js file\nAOS.init({\n  // Settings that can be overridden on per-element basis, by `data-aos-*` attributes:\n  delay: 200, // values from 0 to 3000, with step 50ms\n  duration: 1500, // values from 0 to 3000, with step 50ms\n  easing: \"ease\", // default easing for AOS animations\n  mirror: false, // whether elements should animate out while scrolling past them\n});\n\n// =============Header icons scroll ===========================\n// Get all sections that have an ID defined\nconst sections = document.querySelectorAll(\"section[id]\");\n\n// Add an event listener listening for scroll\nwindow.addEventListener(\"scroll\", navHighlighter);\n\nfunction navHighlighter() {\n  // Get current scroll position\n  let scrollY = window.pageYOffset;\n\n  // Now we loop through sections to get height, top and ID values for each\n  sections.forEach((current) => {\n    const sectionHeight = current.offsetHeight;\n\n    const sectionTop =\n      current.getBoundingClientRect().top + window.pageYOffset - 50;\n\n    const sectionId = current.getAttribute(\"id\");\n\n    /*\n    - If our current scroll position enters the space where current section on screen is, add .active class to corresponding navigation link, else remove it\n    - To know which link needs an active class, we use sectionId variable we are getting while looping through sections as an selector\n    */\n\n    if (scrollY > sectionTop && scrollY <= sectionTop + sectionHeight) {\n      document\n        .querySelector(`.nav-link[href*=\"${sectionId}\"]`)\n        .classList.add(\"nav-link--active\");\n    } else {\n      document\n        .querySelector(`.nav-link[href*=\"${sectionId}\"]`)\n        .classList.remove(\"nav-link--active\");\n    }\n  });\n}\n\n// ====================Sidebar=================\nconst menuIcon = document.querySelector(\"#menu-icon\");\nconst cancelIcon = document.querySelector(\"#cancel-icon\");\nconst sidebarEl = document.querySelector(\"#sidebar\");\nconst sidebarLinks = document.querySelectorAll(\".sidebar__link\");\n\nmenuIcon.addEventListener(\"click\", () => {\n  sidebarEl.classList.add(\"sidebar--active\");\n});\n\ncancelIcon.addEventListener(\"click\", () => {\n  sidebarEl.classList.remove(\"sidebar--active\");\n});\n\nsidebarLinks.forEach((sidebarLink) => {\n  sidebarLink.addEventListener(\"click\", () => {\n    sidebarEl.classList.remove(\"sidebar--active\");\n  });\n});\n"]}